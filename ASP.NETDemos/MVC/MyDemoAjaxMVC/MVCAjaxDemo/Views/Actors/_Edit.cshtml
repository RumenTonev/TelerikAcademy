@using System.Web.Mvc

@model MVCAjaxDemo.Models.LeadingActor


@using (Ajax.BeginForm(
    "Edit",
    "Actors",
    new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "onValidate",
        OnSuccess = "reloadPage"

    },
    new { id = "form-edit-LeadingActor" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LeadingActor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.StudioName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudioName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudioName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudioAdress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudioAdress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudioAdress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                 <input type="button" value="Cancel" onclick="closeEditActorForm()" class="btn" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function reloadPage() {
        $("#single-LeadingActor-form").html("");
        window.location = "/Actors";
    }

    function closeEditActorForm() {
        $("#single-LeadingActor-form").html("");
    }

    var onValidate = function (e) {
        var ee = $;
        var ttt = $.validator;
        $.validator.unobtrusive.parse($("#form-edit-LeadingActor"));
        var isValid = $("#form-edit-LeadingActor").valid();
        if (!isValid) {
            e.abort();

        } else {
            alert("LeadingActor edited successfully.");
        }
    };
</script>